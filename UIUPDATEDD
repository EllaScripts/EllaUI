--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v67=v2(v0(v20,16));if v19 then local v74=0;local v75;while true do if (v74==1) then return v75;end if (v74==0) then v75=v5(v67,v19);v19=nil;v74=1;end end else return v67;end end end);local function v21(v22,v23,v24)if v24 then local v68=(v22/((4 -2)^(v23-(4 -3))))%(2^(((v24-(1 + 0)) -(v23-((1 -0) + 0))) + 1 + 0)) ;return v68-(v68%(1742 -(944 + 797))) ;else local v69=0 -0 ;local v70;while true do if (v69==((1496 -(11 + 8)) -(262 + 1215))) then v70=((3099 -(916 + 1072)) -(127 + 982))^(v23-((402 -(13 + 388)) + 0)) ;return (((v22%(v70 + v70))>=v70) and (844 -(591 + (725 -473)))) or (1857 -(344 + 1513)) ;end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39=(4833 -3817) -((1052 -514) + 478) ;local v40;local v41;while true do if (((640 + 265) -(801 + 104))==v39) then v40,v41=v1(v16,v18,v18 + (2 -0) );v18=v18 + (594 -(104 + 488)) ;v39=1 + 0 ;end if ((1 -0)==v39) then return (v41 * 256) + v40 ;end end end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + 3 );v18=v18 + (922 -(496 + 422)) ;return (v45 * (24319216 -7542000)) + (v44 * ((69042 -(1396 + 538)) -(855 + 717))) + (v43 * (1128 -(627 + 245))) + v42 ;end local function v28()local v46=v27();local v47=v27();local v48=1;local v49=(v21(v47,(549 -(122 + 425)) -(2 -1) ,20 + 0 ) * ((1 + 1)^((1013 + 482) -(730 + 733)))) + v46 ;local v50=v21(v47,21,(519 + 888) -(1196 + 180) );local v51=((v21(v47,(763 -(472 + 280)) + 21 )==(1 -0)) and  -1) or (1 + 0) ;if (v50==(279 -(118 + 161))) then if (v49==(0 -0)) then return v51 * (556 -(217 + 339)) ;else v50=1;v48=0;end elseif (v50==(6569 -4522)) then return ((v49==(0 + 0)) and (v51 * ((1827 -((3633 -2216) + 409))/(0 + 0)))) or (v51 * NaN) ;end return v8(v51,v50-(1617 -(148 + 183 + 263)) ) * (v48 + (v49/((299 -(260 + 37))^(6 + 46)))) ;end local function v29(v30)local v52=203 -((151 -43) + 95) ;local v53;local v54;while true do if (v52==3) then return v6(v54);end if (v52==((239 -149) -(46 + 43))) then v53=v3(v16,v18,(v18 + v30) -1 );v18=v18 + v30 ;v52=363 -(317 + 44) ;end if (v52==(0 -0)) then v53=nil;if  not v30 then v30=v27();if (v30==(1330 -(309 + 1021))) then return "";end end v52=1 -0 ;end if (v52==(984 -(203 + 779))) then v54={};for v76=1575 -(1240 + 334) , #v53 do v54[v76]=v2(v1(v3(v53,v76,v76)));end v52=3;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 -0 ;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55==(0 -0)) then v56=0 -0 ;v57=nil;v55=1 + 0 ;end if ((6 -3)==v55) then v62=nil;while true do local v78=1313 -(223 + 1090) ;while true do if (v78~=(1 + 0)) then else if (v56~=(620 -(96 + 521))) then else local v102=0 -0 ;while true do if ((1 + 0)~=v102) then else return v60;end if (v102~=(1406 -(523 + 883))) then else local v116=870 -(368 + 502) ;while true do if (v116==(356 -(298 + 57))) then v102=4 -3 ;break;end if (v116==0) then for v122=1 -0 ,v27() do v58[v122-(4 -3) ]=v33();end for v124=1 + 0 ,v27() do v59[v124]=v27();end v116=3 -2 ;end end end end end if (v56~=(1 + 0)) then else local v103=0;local v104;while true do if (v103==0) then v104=0 -0 ;while true do if (v104==(0 -0)) then local v121=0 -0 ;while true do if (0~=v121) then else v60={v57,v58,nil,v59};v61=v27();v121=1;end if (v121==(3 -2)) then v104=1;break;end end end if (1~=v104) then else v62={};v56=1149 -(862 + 285) ;break;end end break;end end end break;end if (v78~=(0 -0)) then else if ((651 -(299 + 352))==v56) then v57={};v58={};v59={};v56=1 + 0 ;end if (v56==2) then for v107=1554 -(312 + 1241) ,v61 do local v108=0;local v109;local v110;while true do if (v108==(1847 -(1356 + 491))) then local v119=0 -0 ;while true do if (v119==(0 -0)) then local v126=379 -(367 + 12) ;while true do if (v126==(222 -(72 + 149))) then v119=1 + 0 ;break;end if (v126==(0 -0)) then v109=v25();v110=nil;v126=1 + 0 ;end end end if (v119~=(1 + 0)) then else v108=1 -0 ;break;end end end if (v108~=(1 + 0)) then else if (v109==(739 -(606 + 132))) then v110=v25()~=(849 -(465 + 384)) ;elseif (v109==2) then v110=v28();elseif (v109~=(8 -5)) then else v110=v29();end v62[v107]=v110;break;end end end v60[731 -(452 + 276) ]=v25();for v111=1176 -(34 + 1141) ,v27() do local v112=0 + 0 ;local v113;local v114;local v115;while true do if (v112~=(1028 -(314 + 714))) then else v113=998 -(549 + 449) ;v114=nil;v112=748 -(551 + 196) ;end if ((1320 -(973 + 346))==v112) then v115=nil;while true do if (v113==1) then while true do if (v114==0) then v115=v25();if (v21(v115,1 -0 ,1 -0 )==0) then local v180=0 + 0 ;local v181;local v182;local v183;local v184;while true do if ((2 -1)==v180) then v183=nil;v184=nil;v180=1 + 1 ;end if (v180~=0) then else v181=0 -0 ;v182=nil;v180=1;end if (v180==2) then while true do if (v181==(8 -5)) then if (v21(v183,1 + 2 ,3 + 0 )==(500 -(53 + 446))) then v184[5 -1 ]=v62[v184[2 + 2 ]];end v57[v111]=v184;break;end if (v181~=(2 + 0)) then else local v215=0 -0 ;local v216;while true do if (v215~=0) then else v216=0 -0 ;while true do if (v216==(0 + 0)) then local v225=1629 -(121 + 1508) ;while true do if ((51 -(49 + 2))==v225) then if (v21(v183,1 + 0 ,1)~=1) then else v184[8 -6 ]=v62[v184[2 + 0 ]];end if (v21(v183,1 + 1 ,2)~=(1 + 0)) then else v184[602 -(595 + 4) ]=v62[v184[3]];end v225=235 -(53 + 181) ;end if (v225~=(1 + 0)) then else v216=1;break;end end end if (v216==(2 -1)) then v181=4 -1 ;break;end end break;end end end if (v181~=(1 -0)) then else local v217=0 -0 ;local v218;while true do if (v217==(0 -0)) then v218=0;while true do if (v218~=(0 -0)) then else local v226=0 + 0 ;local v227;while true do if (0~=v226) then else v227=0;while true do if (v227==(0 -0)) then local v234=0;while true do if (v234~=0) then else v184={v26(),v26(),nil,nil};if (v182==(0 + 0)) then local v235=0;local v236;local v237;while true do if (v235==(623 -(218 + 405))) then v236=0;v237=nil;v235=1 -0 ;end if ((1 + 0)~=v235) then else while true do if ((0 -0)~=v236) then else v237=0 -0 ;while true do if (v237==(1037 -(623 + 414))) then v184[3]=v26();v184[2 + 2 ]=v26();break;end end break;end end break;end end elseif (v182==(898 -(312 + 585))) then v184[396 -(318 + 75) ]=v27();elseif (v182==(1 + 1)) then v184[2 + 1 ]=v27() -((1391 -(69 + 1320))^(28 -12)) ;elseif (v182==3) then local v240=0 + 0 ;local v241;local v242;while true do if (v240==(1038 -(545 + 492))) then while true do if (v241==0) then v242=0 + 0 ;while true do if (v242==(1686 -(1182 + 504))) then v184[2 + 1 ]=v27() -((936 -(923 + 11))^16) ;v184[9 -5 ]=v26();break;end end break;end end break;end if (v240==(0 -0)) then v241=1151 -(800 + 351) ;v242=nil;v240=1;end end end v234=3 -2 ;end if (v234~=(43 -(16 + 26))) then else v227=1 + 0 ;break;end end end if (v227~=(2 -1)) then else v218=1439 -(524 + 914) ;break;end end break;end end end if (v218==(1 + 0)) then v181=3 -1 ;break;end end break;end end end if (v181==(234 -(167 + 67))) then local v219=0 -0 ;local v220;while true do if (v219==0) then v220=1623 -(820 + 803) ;while true do if (v220~=1) then else v181=2 -1 ;break;end if (v220==(0 + 0)) then local v228=0 + 0 ;local v229;while true do if (0~=v228) then else v229=0 + 0 ;while true do if (v229==(1 + 0)) then v220=1219 -(63 + 1155) ;break;end if (v229==0) then v182=v21(v115,1848 -(704 + 1142) ,5 -2 );v183=v21(v115,11 -7 ,8 -2 );v229=1;end end break;end end end end break;end end end end break;end end end break;end end break;end if (v113==0) then local v127=1299 -(419 + 880) ;while true do if (v127==(1482 -(1348 + 134))) then local v149=972 -(411 + 561) ;while true do if (v149==(1930 -(599 + 1330))) then v127=1;break;end if (v149==(0 + 0)) then v114=0 + 0 ;v115=nil;v149=1 + 0 ;end end end if (v127==(2 -1)) then v113=1 + 0 ;break;end end end end break;end end end v56=9 -6 ;end v78=1 + 0 ;end end end break;end if (v55==1) then v58=nil;v59=nil;v55=1 + 1 ;end if (v55~=(1 + 1)) then else v60=nil;v61=nil;v55=3;end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (0==v63) then v64=v35[1];v65=v35[2];v63=1;end if (v63==1) then v66=v35[3];return function(...)local v79=1;local v80= -1;local v81={...};local v82=v12("#",...) -1 ;local function v83()local v84=v64;local v85=v65;local v86=v66;local v87=v32;local v88={};local v89={};local v90={};for v94=0 -0 ,v82 do if ((v94>=v86) or ((2246 -1295)>(4082 -(72 + 682 + 90)))) then v88[v94-v86 ]=v81[v94 + (1363 -(1318 + 44)) ];else v90[v94]=v81[v94 + (201 -(97 + 103)) ];end end local v91=(v82-v86) + (3 -2) ;local v92;local v93;while true do local v95=1468 -(1108 + 360) ;while true do if (((2425 + (1065 -(722 + 39)))==(6733 -4004)) and (v95==((2085 -1228) -(302 + 555)))) then local v106=0 -0 ;while true do if ((v106==(678 -(115 + 563))) or (((3001 -1913) -(13 + 69))>=(4358 + (296 -161)))) then v92=v84[v79];v93=v92[1 + 0 ];v106=1 + (0 -0) ;end if (((1170 -(213 + 460))<=(5806 -(670 + 1211))) and (v106==(1 -(180 -(24 + 156))))) then v95=2 -1 ;break;end end end if ((v95==(1 -0)) or ((4918 -2507)==(105 + 217))) then if (((9400 -6519)==(1435 + 1446)) and (v93<=(1578 -(701 + 866)))) then if (((2925 + (2823 -1676))==((2471 + 1753) -(9 + 143))) and (v93<=(6 -1))) then if ((v93<=(1 + 1)) or ((3892 -1795)==(2240 -1356))) then if ((v93<=(0 + 0)) or ((2381 -(1252 + 533))>(271 + 776))) then v90[v92[704 -(136 + 331 + 235) ]]=v90[v92[14 -11 ]];elseif ((v93>(2 -1)) or ((3831 -(758 + 656))<(7779 -5634))) then v90[v92[1250 -(104 + 1144) ]]=v37[v92[9 -6 ]];else v90[v92[2 + 0 ]][v92[1654 -(1581 + (145 -75)) ]]=v92[6 -2 ];end elseif ((v93<=(12 -9)) or ((9722 -7085)<=(4279 -2846))) then local v130=928 -(273 + 655) ;local v131;local v132;local v133;local v134;local v135;while true do if (((564 -(29 + 48))<=(6352 -3298)) and (v130==(725 -(354 + 369)))) then v135=nil;while true do if (((2 -0)==v131) or ((6378 -(948 + (2373 -(1546 + 272))))<=(1714 -(453 + 358)))) then for v203=v132,v80 do local v204=0 -0 ;local v205;while true do if ((v204==(0 + 0 + 0)) or ((3854 -(160 + 78))<(3068 -(1690 + 84)))) then v205=(0 + 0) -0 ;while true do if (((1457 + 158)<=(8737 -(3117 + 2337))) and (v205==(0 -0))) then v135=v135 + (2 -1) + 0 ;v90[v203]=v133[v135];break;end end break;end end end break;end if ((v131==((154 -(5 + 149)) -0)) or ((4470 -(2054 -(43 + 130)))>(4186 -1522))) then v132=v92[4 -2 ];v133,v134=v87(v90[v132](v13(v90,v132 + 1 + 0 ,v92[8 -5 ])));v131=1;end if ((v131==(1 + 0)) or ((841 -447)==(352 + 195))) then local v192=1319 -(724 + 595) ;while true do if ((v192==(0 + 0 + 0)) or ((6667 -(4801 -2006))<=(761 + 7 + 484))) then v80=(v134 + v132) -(1 + 0) ;v135=(1151 -(478 + 673)) -0 ;v192=1;end if (((1 + 0)==v192) or ((3934 -(432 + 159))<=(102 + 1283))) then v131=5 -(876 -(264 + 609)) ;break;end end end end break;end if (((2929 -(787 + 15))>(1290 -541)) and (v130==(1 -(0 -0)))) then v133=nil;v134=nil;v130=4 -2 ;end if ((v130==(0 -(993 -(515 + 478)))) or ((85 + 2900)>=(4431 -(177 + (2103 -(982 + 966)))))) then v131=(0 -0) + 0 ;v132=nil;v130=1335 -(41 + 1293) ;end end elseif ((v93==(3 + 1)) or ((6405 -(1038 + 855))<=(18959 -14507))) then local v154=1577 -(260 + 1317) ;local v155;local v156;while true do if (((4358 -2744)<(4816 -(61 + 153))) and (v154==1)) then while true do if (((390 + 823)<(522 + 2143)) and (v155==0)) then v156=v92[2];v90[v156]=v90[v156]();break;end end break;end if ((v154==(0 + 0)) or ((340 + 3383)>=(1819 + (3577 -(208 + 899))))) then v155=0 + 0 ;v156=nil;v154=2 -1 ;end end else v90[v92[1699 -(758 + 939) ]]=v34(v85[v92[9 -6 ]],nil,v37);end elseif ((v93<=(5 + 3)) or (1183>(393 + 833))) then if ((v93<=6) or ((2317 + 1433)==(1024 -(278 + 303)))) then v90[v92[(16 -12) -2 ]]=v90[v92[3 + 0 ]][v92[3 + 1 ]];elseif ((v93==(7 + 0)) or ((5181 -(262 + 700))<(2348 -(206 + 812)))) then for v175=v92[2],v92[4 -1 ] do v90[v175]=nil;end else local v158=(239 -(164 + 75)) -0 ;local v159;local v160;while true do if (((2498 -(2416 -(713 + 176)))>=206) and (v158==((1 -0) + 0))) then for v193=v159 + 1 + 0 ,v92[1605 -(77 + 1525) ] do v7(v160,v90[v193]);end break;end if (((3168 -1547)<=(5150 -(833 + 854))) and (v158==(0 + 0))) then local v187=1567 -(820 + 747) ;while true do if (((1622 -(32 + 82))==(2509 -1001)) and (v187==(1 + 0))) then v158=844 -(615 + 228) ;break;end if ((v187==(0 -(0 -0))) or (((13285 -9193) -2229)<(1720 -558))) then v159=v92[2 -0 ];v160=v90[v159];v187=2 -1 ;end end end end end elseif ((1124<(8442 -5091)) and (v93<=(1699 -(363 + 1327)))) then local v138=0 -0 ;local v139;local v140;local v141;while true do if ((v138==0) or ((5606 -3235)>=(206 + 3599))) then v139=0 -0 ;v140=nil;v138=1 + 0 ;end if ((v138==(1 + (0 -0))) or ((1 + 291)>(5841 -2779))) then v141=nil;while true do if (((1671 -(441 + 230))<(7966 -5593)) and (v139==(0 -0))) then v140=v92[6 -4 ];v141=v90[v92[5 -2 ]];v139=1;end if (((1695 -(1268 + 426))==v139) or (2148>=((13554 -9753) -(637 + 41)))) then v90[v140 + 1 + 0 + 0 ]=v141;v90[v140]=v141[v92[8 -4 ]];break;end end break;end end elseif (((5568 -(770 + 57))>4504) and (v93==(29 -19))) then local v161=0 -0 ;local v162;local v163;while true do if (((1363 + 2530)>(2864 + 95)) and (v161==(454 -(358 + (114 -(11 + 8)))))) then while true do if ((v162==(0 -0)) or ((2502 + 415)>=(3630 -(97 + 122)))) then v163=v92[2 + (0 -0) ];v90[v163]=v90[v163](v13(v90,v163 + (957 -((121 -51) + 886)) ,v80));break;end end break;end if (((1530 + 331)<=2680) and (v161==(0 -0))) then v162=0 -0 ;v163=nil;v161=1 + 0 ;end end elseif ((v92[2 + 0 ]==v90[v92[851 -(106 + 741) ]]) or (((3292 -(369 + 640)) -((3021 -(602 + 1215)) + 150 + 178))<(66 + 179))) then v79=v79 + (1 -0) ;else v79=v92[343 -(58 + 282) ];end elseif (((2132 + 1129)==(5964 -2703)) and (v93<=((3790 -2160) -(255 + 1358)))) then if ((v93<=(897 -(840 + 43))) or ((8882 -5879)<(2159 -1143))) then if (((11403 -8784)<(5427 -(754 + 370))) and (v93<=(1452 -(717 + 723)))) then v90[v92[2 + 0 ]][v92[626 -((2228 -(1710 + 137)) + 242) ]]=v90[v92[542 -(478 + 60) ]];elseif (((432 -235)<(668 -(2053 -(1217 + 605)))) and (v93>(11 + 2))) then v79=v92[1 + 2 ];else local v165=0 + 0 + 0 ;local v166;while true do if (((737 + (12918 -8852))>(210 -114)) and (v165==(705 -((1853 -(624 + 1181)) + 657)))) then v166=v92[1 + 1 ];v90[v166](v90[v166 + (80 -(37 + 42)) ]);break;end end end elseif (((3133 -(872 + 124 + 139))<=(5405 -2592)) and (v93<=(8 + 7))) then local v144=0 + 0 ;local v145;while true do if ((v144==(0 + 0)) or ((2776 -658)<(1300 -354))) then v145=v92[1 + 1 ];v90[v145]=v90[v145](v13(v90,v145 + (1832 -(1100 + 731)) ,v92[2 + 1 ]));break;end end elseif (((2581 -(15 + 10))>=(197 + 617)) and (v93==((1015 + 329) -(414 + 914)))) then local v167=0 -(0 + 0) ;local v168;local v169;local v170;while true do if ((v167==(1876 -(803 + 627 + 446))) or ((2613 + 1026)<=((5485 -1616) -(27 + 809)))) then local v189=0 + 0 ;while true do if ((v189==(2 -1)) or ((1302 + 571)<=(174 + 24))) then v167=(95 -(9 + 85)) + 0 ;break;end if ((v189==(395 -(345 + 4 + 46))) or ((3385 -(10 + 34))>(19221 -15247))) then v168=v92[1 + 1 ];v169=v90[v168];v189=1 + (0 -0) ;end end end if ((v167==1) or ((3028 -(430 + 52))<=(3171 -2356))) then v170=v92[3];for v199=1 + 0 ,v170 do v169[v199]=v90[v168 + v199 ];end break;end end else v90[v92[1318 -(454 + 862) ]]={};end elseif (((2410 -(764 + 147))==((4270 -(62 + 49)) -2660)) and (v93<=(1586 -(1162 + (1251 -847))))) then if (((1586 + 1969)==(3042 + 513)) and (v93<=(58 -40))) then local v146=(107 + 438) -(76 + 469) ;local v147;local v148;while true do if ((4210<=4917) and (v146==((69 + 748) -(507 + 310)))) then local v179=(0 -0) + 0 + 0 ;while true do if (((142 + 261)<=(679 + 250)) and (v179==(1103 -(72 + 1030)))) then v146=1070 -(671 + 398) ;break;end if ((((2545 -(778 + 342)) + 3341)>=(480 + 3013)) and (v179==(0 + 0))) then v147=0 + 0 ;v148=nil;v179=1;end end end if (((716 + 713)<=(2847 -(606 + (903 -(125 + 331))))) and (v146==(1302 -(282 + 1019)))) then while true do if (((1904 + 2052)<=4491) and (v147==(0 -0))) then v148=v92[614 -(253 + 359) ];v90[v148](v13(v90,v148 + (4 -3) ,v92[912 -(95 + 814) ]));break;end end break;end end elseif (((2462 + 411)>(4297 -(1559 + 78))) and (v93==(425 -(285 + 121)))) then if (((269 + 2825)>=(2720 -(14 + 74))) and (v90[v92[6 -4 ]]==v92[15 -11 ])) then v79=v79 + (1970 -(1564 + 405)) ;else v79=v92[484 -(14 + 467) ];end else v90[v92[1405 -(756 + 647) ]]();end elseif (((1631 -623)<=(4594 -(1251 + 190))) and (v93<=(10 + 11))) then do return;end elseif (((1102 + 2629)==(2910 + 821)) and (v93==(1 + 21))) then v90[v92[382 -(122 + 258) ]]=v92[695 -(600 + 92) ]~=(0 + 0) ;else v90[v92[2 -0 ]]=v92[(10 + 0) -7 ];end v79=v79 + (2 -1) ;break;end end end end A,B=v32(v11(v83));if  not A[1] then local v96=0;local v97;while true do if (v96==0) then v97=v35[4][v79] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
